     1                                  
     2                                  bits 32
     3                                  
     4                                  global start
     5                                  
     6                                  extern exit, scanf, fopen, fscanf, fprintf, fclose
     7                                  import exit msvcrt.dll
     8                                  import scanf msvcrt.dll
     9                                  import fopen msvcrt.dll
    10                                  import fscanf msvcrt.dll
    11                                  import fprintf msvcrt.dll
    12                                  import fclose msvcrt.dll
    13                                  
    14                                  segment data use32 class = data
    15 00000000 257300                      format_string db '%s', 0         ; s- pentru cuvine
    16 00000003 256400                      format_numar db '%d', 0          ; d - pentru int-uri
    17                                      
    18 00000006 6F75747075742E7478-         fisier_afisare db 'output.txt', 0
    18 0000000F 7400               
    19 00000011 7700                        mod_acces_afisrae db "w", 0      ; w - pentru scriere. daca fiserul nu exista, se va crea 
    20 00000013 FFFFFFFF                    descriptor_fis_afis dd -1
    21                                      
    22 00000017 00<rept>                    nume_fisier times 20 db 0        ; fisireul este de maxim 20 caractere
    23 0000002B 7200                        mod_acces db 'r', 0              ; r - pentru citire
    24 0000002D FFFFFFFF                    descriptor_fis dd -1
    25                                      
    26 00000031 00000000                    caracter_special dd 0            ; daca nr de litere este mai mic decat, vom completa cu cs 
    27 00000035 00000000                    n_numar dd 0                     ; numarul de litere din fiecare cuvant, pe care le vom afisa
    28                                      
    29 00000039 00<rept>                    text times 100 db 0              ;
    30 0000009D 00<rept>                    cuvant times 100 db 0
    31                                      
    32                                  segment code use32 class = code
    33                                      start:
    34 00000000 FC                              CLD
    35                                          
    36 00000001 68[17000000]                    push dword nume_fisier       ; citim numele fisierului
    37 00000006 68[00000000]                    push dword format_string
    38 0000000B FF15[00000000]                  call [scanf]
    39 00000011 83C408                          add esp, 4 * 2               ; eliberam stiva
    40                                          
    41 00000014 68[31000000]                    push dword caracter_special  ; citim caracterul special
    42 00000019 68[00000000]                    push dword format_string
    43 0000001E FF15[00000000]                  call [scanf]
    44 00000024 83C408                          add esp, 4 * 2
    45                                          
    46 00000027 68[35000000]                    push dword n_numar           ; citim numarul
    47 0000002C 68[03000000]                    push dword format_numar
    48 00000031 FF15[00000000]                  call [scanf]
    49 00000037 83C408                          add esp, 4 * 2
    50                                          
    51                                          ; eax = fopen(nume_fisier, mod_acces)
    52 0000003A 68[2B000000]                    push dword mod_acces     
    53 0000003F 68[17000000]                    push dword nume_fisier
    54 00000044 FF15[00000000]                  call [fopen]
    55 0000004A 83C408                          add esp, 4 * 2               ; eliberam parametrii de pe stiva
    56                                          
    57 0000004D A3[2D000000]                    mov [descriptor_fis], eax    ; salvam valoarea returnata de fopen in variabila descriptor_fis
    58                                          
    59                                          ; verificam daca functia fopen a deschis cu succes fisierul (daca EAX != 0)
    60 00000052 83F800                          cmp eax, 0
    61 00000055 747C                            je .final
    62                                          
    63                                          ; deschidem fisierul de afisare 
    64 00000057 68[11000000]                    push dword mod_acces_afisrae     
    65 0000005C 68[06000000]                    push dword fisier_afisare
    66 00000061 FF15[00000000]                  call [fopen]
    67 00000067 83C408                          add esp, 4 * 2               ; eliberam parametrii de pe stiva
    68                                          
    69 0000006A A3[13000000]                    mov [descriptor_fis_afis], eax    ; salvam valoarea returnata de fopen in variabila descriptor_fis
    70                                          
    71 0000006F 83F800                          cmp eax, 0
    72 00000072 745F                            je .final
    73                                          
    74                                          ; fscanf(descriptor_fis, format, text)
    75                                          .repet:
    76 00000074 68[39000000]                        push dword text
    77 00000079 68[00000000]                        push dword format_string
    78 0000007E FF35[2D000000]                      push dword [descriptor_fis]
    79 00000084 FF15[00000000]                      call [fscanf]
    80 0000008A 83C40C                              add esp, 4 * 3
    81                                              
    82 0000008D 83F8FF                              cmp EAX, -1                 ;
    83 00000090 7441                                je .final
    84                                              
    85 00000092 8B0D[35000000]                      mov ECX, [n_numar]
    86 00000098 BE[39000000]                        mov ESI, text
    87                                              
    88                                              .afisare:
    89 0000009D 803E00                                  cmp byte [esi], 0      ; daca cuvantul s-a terminat
    90 000000A0 7503                                    jne .next
    91 000000A2 C6062B                                  mov byte[esi], '+'
    92                                                  .next:
    93 000000A5 46                                      inc ESI
    94 000000A6 E2F5                                loop .afisare
    95                                              
    96 000000A8 C60620                              mov byte[ESI], ' '             ; caracterul spatiu
    97 000000AB 46                                  inc ESI
    98 000000AC C60600                              mov byte[ESI], 0               ; finalul noului cuvant
    99                                              
   100                                              ; fprintf(descriptor_fis, text)
   101 000000AF 68[39000000]                        push dword text
   102 000000B4 FF35[13000000]                      push dword [descriptor_fis_afis]
   103 000000BA FF15[00000000]                      call [fprintf]
   104 000000C0 83C408                              add esp, 4 * 2
   105                                              
   106 000000C3 BF[39000000]                        mov EDI, text
   107 000000C8 B964000000                          mov ECX, 100
   108 000000CD B000                                mov al, 0
   109 000000CF F3AA                                repe stosb
   110                                              
   111 000000D1 EBA1                            jmp .repet
   112                                              
   113                                          .final:
   114                                          
   115                                          ; fclose(descriptor_fis)
   116 000000D3 FF35[2D000000]                  push dword [descriptor_fis]
   117 000000D9 FF15[00000000]                  call [fclose]
   118 000000DF 83C404                          add esp, 4
   119                                          
   120 000000E2 FF35[13000000]                  push dword [descriptor_fis_afis]
   121 000000E8 FF15[00000000]                  call [fclose]
   122 000000EE 83C404                          add esp, 4
   123                                          
   124 000000F1 6A00                            push dword 0
   125 000000F3 FF15[00000000]                  call [exit]
   126                                  
