        -:    0:Source:C:/Users/codri/Documents/GitHub/University_projects/semester 2/OOP/object_oriented_in_C/console/console.c
        -:    0:Graph:C:\Users\codri\Documents\GitHub\University_projects\semester 2\OOP\object_oriented_in_C\cmake-build-debug-coverage\CMakeFiles\object_oriented_in_C.dir\console\console.c.gcno
        -:    0:Data:C:\Users\codri\Documents\GitHub\University_projects\semester 2\OOP\object_oriented_in_C\cmake-build-debug-coverage\CMakeFiles\object_oriented_in_C.dir\console\console.c.gcda
        -:    0:Runs:1
        -:    1:#include "console.h"
        -:    2:#include <stdio.h>
        -:    3:#include <stdlib.h>
        -:    4:#include <string.h>
        -:    5:
        -:    6:#define this const console* restrict Console
        -:    7:
function filter called 0 returned 0% blocks executed 0%
    #####:    8:void filter(console* restrict Console) {
        -:    9:	char size[10];
    #####:   10:	printf("Filtering service...\n");
    %%%%%:   10-block  0
call    0 never executed
    #####:   11:	printf("Stock filter:");
call    0 never executed
    #####:   12:	scanf("%10s", size); getchar();
call    0 never executed
call    1 never executed
    #####:   13:	if (!Console->Service->Validator->valid_number(size)) {
call    0 never executed
branch  1 never executed (fallthrough)
branch  2 never executed
    #####:   14:		printf("Invalid input.\n");
    %%%%%:   14-block  0
call    0 never executed
    #####:   15:		return;
        -:   16:	}
    #####:   17:	Console->stock_filter = Console->Service->Validator->convert_char_to_int(size);
    %%%%%:   17-block  0
call    0 never executed
    #####:   18:	printf("Starting character: ");
call    0 never executed
    #####:   19:	scanf("%4s", size); getchar();
call    0 never executed
call    1 never executed
    #####:   20:	if (strcmp(size, "none") == 0 || strcmp(size, "NONE") == 0)
branch  0 never executed (fallthrough)
branch  1 never executed
    %%%%%:   20-block  0
branch  2 never executed (fallthrough)
branch  3 never executed
    #####:   21:		Console->letter_filter = '\0';
    %%%%%:   21-block  0
    #####:   22:	else Console->letter_filter = size[0];
    %%%%%:   22-block  0
        -:   23:}
        -:   24:
function delete_stock called 0 returned 0% blocks executed 0%
    #####:   25:static void delete_stock(this) {
        -:   26:	char name[20];
    #####:   27:	printf("Enter medication name: ");
    %%%%%:   27-block  0
call    0 never executed
    #####:   28:	scanf("%20s", name); getchar();
call    0 never executed
call    1 never executed
    #####:   29:	if (!Console->Service->remove_stock(Console->Service, name))
call    0 never executed
branch  1 never executed (fallthrough)
branch  2 never executed
    #####:   30:		printf("Invalid name\n");
    %%%%%:   30-block  0
call    0 never executed
    #####:   31:}
        -:   32:
function display called 0 returned 0% blocks executed 0%
    #####:   33:static void display(this) {
        -:   34:	char input[2];
    #####:   35:	printf("Ascending (0) or descending (1)?\n");
    %%%%%:   35-block  0
call    0 never executed
    #####:   36:	scanf("%1s", input); getchar();
call    0 never executed
call    1 never executed
    #####:   37:	if (input[0] == '0') {
branch  0 never executed (fallthrough)
branch  1 never executed
    #####:   38:		Console->Service->Repo->sort(Console->Service->Repo, descending_repo);
    %%%%%:   38-block  0
call    0 never executed
    #####:   39:		printf("\n------------------// meds \\\\------------------\n");
call    0 never executed
    #####:   40:		for (unsigned int i = Console->Service->Repo->number_of_meds; i > 0; -- i) {
    %%%%%:   40-block  0
    %%%%%:   40-block  1
branch  0 never executed
branch  1 never executed (fallthrough)
    #####:   41:			const meds_t* Med = Console->Service->Repo->list[i - 1];
        -:   42:			// here we test for the filter
    #####:   43:			if (Console->stock_filter <= Med->quantity &&
    %%%%%:   43-block  0
branch  0 never executed (fallthrough)
branch  1 never executed
    #####:   44:				(Console->letter_filter == Med->name[0] || Console->letter_filter == '\0'))
    %%%%%:   44-block  0
branch  0 never executed (fallthrough)
branch  1 never executed
    %%%%%:   44-block  1
branch  2 never executed (fallthrough)
branch  3 never executed
    #####:   45:				printf("ID %d: %s - %d%%, stock %d\n", Med->id, Med->name, Med->concentration, Med->quantity);
    %%%%%:   45-block  0
call    0 never executed
        -:   46:		}
        -:   47:		// the repo needs to be sorted back because when adding an elem it's already sorted using insertion sort
    #####:   48:		Console->Service->Repo->sort(Console->Service->Repo, ascending_repo);
    %%%%%:   48-block  0
call    0 never executed
        -:   49:	}
        -:   50:	else { // the repo is already sorted
    #####:   51:		for (unsigned int i = 0; i < Console->Service->Repo->number_of_meds; i++) {
    %%%%%:   51-block  0
    %%%%%:   51-block  1
    %%%%%:   51-block  2
branch  0 never executed
branch  1 never executed (fallthrough)
    #####:   52:			const meds_t* Med = Console->Service->Repo->list[i];
    #####:   53:			if (Console->stock_filter <= Med->quantity &&
    %%%%%:   53-block  0
branch  0 never executed (fallthrough)
branch  1 never executed
    #####:   54:				(Console->letter_filter == Med->name[0] || Console->letter_filter == '\0'))
    %%%%%:   54-block  0
branch  0 never executed (fallthrough)
branch  1 never executed
    %%%%%:   54-block  1
branch  2 never executed (fallthrough)
branch  3 never executed
    #####:   55:				printf("ID %d: %s - %d%%, stock %d\n", Med->id, Med->name, Med->concentration, Med->quantity);
    %%%%%:   55-block  0
call    0 never executed
        -:   56:		}
        -:   57:	}
    #####:   58:	printf("\n");
    %%%%%:   58-block  0
call    0 never executed
    #####:   59:}
        -:   60:
        -:   61:// static void display(this) {
        -:   62:// 	char input[2];
        -:   63:// 	printf("Ascending (0) or descending (1)?\n");
        -:   64:// 	scanf("%1s", input); getchar();
        -:   65:// 	if (input[0] == '1') {
        -:   66:// 		printf("\n------------------// meds \\\\------------------\n");
        -:   67:// 		for (unsigned int i = Console->Service->Repo->number_of_meds; i > 0; -- i) {
        -:   68:// 			const meds_t* Med = Console->Service->Repo->list[i - 1];
        -:   69:// 			if (Console->stock_filter <= Med->quantity &&
        -:   70:// 				(Console->letter_filter == Med->name[0] || Console->letter_filter == '\0'))
        -:   71:// 				printf("ID %d: %s - %d%%, stock %d\n", Med->id, Med->name, Med->concentration, Med->quantity);
        -:   72:// 		}
        -:   73:// 		return;
        -:   74:// 	}
        -:   75:// 	printf("\n------------------// meds \\\\------------------\n");
        -:   76:// 	for (unsigned int i = 0; i < Console->Service->Repo->number_of_meds; i++) {
        -:   77:// 		const meds_t* Med = Console->Service->Repo->list[i];
        -:   78:// 		if (Console->stock_filter <= Med->quantity &&
        -:   79:// 			(Console->letter_filter == Med->name[0] || Console->letter_filter == '\0'))
        -:   80:// 			printf("ID %d: %s - %d%%, stock %d\n", Med->id, Med->name, Med->concentration, Med->quantity);
        -:   81:// 	}
        -:   82:// 	printf("\n");
        -:   83:// }
        -:   84:
function modify called 0 returned 0% blocks executed 0%
    #####:   85:static void modify(this) {
        -:   86:	char current_name[20], new_name[20], new_concentration[10];
    #####:   87:	printf("Enter the current name: ");
    %%%%%:   87-block  0
call    0 never executed
    #####:   88:	scanf("%20s", current_name); getchar();
call    0 never executed
call    1 never executed
    #####:   89:	printf("Enter the new name: ");
call    0 never executed
    #####:   90:	scanf("%20s", new_name); getchar();
call    0 never executed
call    1 never executed
    #####:   91:	printf("Enter the new concentration: ");
call    0 never executed
    #####:   92:	scanf("%10s", new_concentration); getchar();
call    0 never executed
call    1 never executed
        -:   93:
    #####:   94:	if (!Console->Service->modify_med(Console->Service, current_name, new_name, new_concentration))
call    0 never executed
branch  1 never executed (fallthrough)
branch  2 never executed
    #####:   95:		printf("Something went wrong when modifying the medication\n");
    %%%%%:   95-block  0
call    0 never executed
    #####:   96:}
        -:   97:
function add_element called 0 returned 0% blocks executed 0%
    #####:   98:static void add_element(this) {
        -:   99:	char name[20], concentration[10], quantity[10];
    #####:  100:	printf("Enter the name of the medicament: ");
    %%%%%:  100-block  0
call    0 never executed
    #####:  101:	scanf("%20s", name); getchar();
call    0 never executed
call    1 never executed
    #####:  102:	printf("Enter the concentration: ");
call    0 never executed
    #####:  103:	scanf("%10s", concentration); getchar();
call    0 never executed
call    1 never executed
    #####:  104:	printf("Enter the quantity: ");
call    0 never executed
    #####:  105:	scanf("%10s", quantity); getchar();
call    0 never executed
call    1 never executed
        -:  106:
    #####:  107:	if (!Console->Service->add_meds(Console->Service, name, concentration, quantity))
call    0 never executed
branch  1 never executed (fallthrough)
branch  2 never executed
    #####:  108:		printf("Something went wrong when adding the medication\n");
    %%%%%:  108-block  0
call    0 never executed
    #####:  109:}
        -:  110:
function run called 0 returned 0% blocks executed 0%
    #####:  111:void run(console* restrict Console) {
        -:  112:	// initialization
    #####:  113:	Console->filter = filter;
    #####:  114:	Console->stock_filter = 0;
    #####:  115:	Console->letter_filter = '\0';
        -:  116:
        -:  117:	// run app
    #####:  118:	_Bool IsRunning = 1;
    #####:  119:	while (IsRunning) {
    %%%%%:  119-block  0
    %%%%%:  119-block  1
branch  0 never executed
branch  1 never executed (fallthrough)
        -:  120:		char input[2];
    #####:  121:		printf("------------------// menu \\\\------------------\n");
    %%%%%:  121-block  0
call    0 never executed
    #####:  122:		printf("1. Add medication\n");
call    0 never executed
    #####:  123:		printf("2. Modify concentration and name\n");
call    0 never executed
    #####:  124:		printf("3. Delete stock from one med\n");
call    0 never executed
    #####:  125:		printf("4. Display all meds\n");
call    0 never executed
    #####:  126:		printf("5. Filter\n");
call    0 never executed
    #####:  127:		printf("E. Exit\n");
call    0 never executed
    #####:  128:		scanf("%1s", input); getchar();
call    0 never executed
call    1 never executed
    #####:  129:		switch (input[0]) {
branch  0 never executed
branch  1 never executed
branch  2 never executed
branch  3 never executed
branch  4 never executed
branch  5 never executed
branch  6 never executed
    #####:  130:			case '1':
    #####:  131:				add_element(Console);
    %%%%%:  131-block  0
call    0 never executed
    #####:  132:				break;
    #####:  133:			case '2':
    #####:  134:				modify(Console);
    %%%%%:  134-block  0
call    0 never executed
    #####:  135:				break;
    #####:  136:			case '3':
    #####:  137:				delete_stock(Console);
    %%%%%:  137-block  0
call    0 never executed
    #####:  138:				break;
    #####:  139:			case '4':
    #####:  140:				display(Console);
    %%%%%:  140-block  0
call    0 never executed
    #####:  141:				break;
    #####:  142:			case '5':
    #####:  143:				Console->filter(Console);
    %%%%%:  143-block  0
call    0 never executed
    #####:  144:				break;
    #####:  145:			case 'E':
        -:  146:			case 'e': // exit the program case
    #####:  147:				IsRunning = 0;
    #####:  148:				break;
    %%%%%:  148-block  0
    #####:  149:			default:
    #####:  150:				printf("Invalid input\n");
    %%%%%:  150-block  0
call    0 never executed
    #####:  151:				break;
        -:  152:		}
        -:  153:	}
    #####:  154:	free(Console->Service->Validator);
    #####:  155:	Console->Service->Clear(Console->Service);
    %%%%%:  155-block  0
call    0 never executed
    #####:  156:}
